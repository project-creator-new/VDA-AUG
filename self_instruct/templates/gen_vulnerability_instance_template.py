output_first_template_for_clf = '''Come up with one example for each of the following tasks. Try to generate multiple examples when possible. If the task doesn't require additional input, you can generate the output directly.
The format for generating content should adhere to the "example task". Do not add any symbols before or after the keywords Task, classLabel, input and output. The content between Task, input, and output should have a blank line.
The classLabel tag has only two optional words: complete and incomplete.

example task: A complete vulnerability description contains 5 key attributes: 'vector', 'attacker', 'cause', 'impact', 'affected_product'. Determine whether the following input vulnerability description is complete.

classLabel: incomplete

input: Heap-based buffer overflow in the yy_get_next_buffer function in Flex before 2.6.1 might allow context-dependent attackers to cause a denial of service or possibly execute arbitrary code via vectors involving num_to_read.

output: The description of the vulnerability is comprehensive.

Task:'''

input_first_template_for_gen = '''There are 5 tasks in total. Generate one example for each of the five tasks. The order of each example must be consistent with the order of the input commands. Try to generate multiple examples when possible. If the task doesn't require additional input, you can generate the output directly.
The format for generating content should adhere to the "example task". Do not add any symbols before or after the keywords Task, input, and output. The content between Task, input, and output should have a blank line.”The text must include the three keywords “Task”, “input”, and “output”. Each task is separated by two newline characters.
Output the original command following the keyword “Task”.

example task: The following input is an incomplete vulnerability description. Generate the attacker of the vulnerability and fill it in at the [Masked] position to complete the description.One input and one output.

input: Cross-site scripting (XSS) vulnerability in the table-structure page in phpMyAdmin 4.6.x before 4.6.3 allows [Masked] to inject arbitrary web script or HTML via vectors involving a comment.

output: Cross-site scripting (XSS) vulnerability in the table-structure page in phpMyAdmin 4.6.x before 4.6.3 allows remote attackers to inject arbitrary web script or HTML via vectors involving a comment.

Task:'''

new_input_template_for_gen = '''
Generate one example for the task. The order of each example must be consistent with the order of the input commands. Try to generate multiple examples when possible. If the task doesn't require additional input, you can generate the output directly. The format for generating content should adhere to the "example task". Do not add any symbols before or after the keywords Task, input, and output. The content between Task, input, and output should have a blank line. The text must include the three keywords “Task”, “input”, and “output”. Each task is separated by two newline characters.
Output the original command following the keyword “Task”.

Task:
Example task: The following input is an incomplete vulnerability description. Generate the attacker of the vulnerability and fill it in at the [Masked] position to complete the description. One input and one output.

input: Cross-site scripting (XSS) vulnerability in the table-structure page in phpMyAdmin 4.6.x before 4.6.3 allows [Masked] to inject arbitrary web script or HTML via vectors involving a comment.

output: Cross-site scripting (XSS) vulnerability in the table-structure page in phpMyAdmin 4.6.x before 4.6.3 allows remote attackers to inject arbitrary web script or HTML via vectors involving a comment.

Task:'''